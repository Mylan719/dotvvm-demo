@viewModel SimpleDotvvmConcepts.ViewModels.StaticCommandViewModel, SimpleDotvvmConcepts
@masterPage Views/MasterPage.dotmaster
@import demo = SimpleDotvvmConcepts.StaticComand.StaticComandDemo
<!--Just call of a static method-->
    <dot:Content ContentPlaceHolderID="MainContent">
        <section>
            <h3>Maned wolf</h3> <dot:Button Text="Toggle" Click="{staticCommand: ToggleWolf = !ToggleWolf}" />
            <section Visible="{value: ToggleWolf}">
                <img src="img/maned-wolf-1.jpg" />
            </section>
        </section>

        <section>
            <h2>Seal</h2>
            <div>
                <dot:Button Text="Gimme seal" Click="{staticCommand: SealUrl = demo.GetRandomFunnyAnimalUrl()}" />
                <dot:Button Text="Gimme seal the lame way" Click="{command: SealUrl = demo.GetRandomFunnyAnimalUrl()}" />
            </div>
            <img Visible="{value: SealUrl != null}"
                 src="{value: SealUrl}"
                 title="Random seal" />
        </section>

        <section>
            <h2>Let's cut a beam into pieces</h2>
            <p>
                <label>Beam length:</label> <dot:TextBox UpdateTextAfterKeydown Changed="{staticCommand: Pieces = demo.RoundDown(BeamLength/PieceLenght)}" Text="{value: BeamLength}" />
            </p>
            <p>
                <label>Piece length:</label> <dot:TextBox UpdateTextAfterKeydown Changed="{staticCommand: Pieces = demo.RoundDown(BeamLength/PieceLenght)}" Text="{value: PieceLenght}" />
            </p>
            <p>
                <label>Pieces:</label> <dot:TextBox Enabled="false" Text="{value: Pieces }" />
            </p>
        </section>

        <section>
            <h2>Binding blocks in staticCommand</h2>
            <dot:Button Text="Start" Click="{staticCommand: demo.SnailCallAsync(); SnailText = "It's finished. It's done." }" />

            <dot:Button Text="Start Parameters" Click="{staticCommand: demo.Parameters(SnailText = "Started..."); demo.SnailCallAsync(); SnailText = "It's finished. It's done." }" />

            <p IncludeInPage="{value: SnailText != null}" InnerText="{value: SnailText ?? "..."}" />
        </section>
    </dot:Content>

